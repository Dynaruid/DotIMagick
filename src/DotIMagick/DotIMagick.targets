<Project>
  <ItemGroup>
    <NativeDir Include="$(MSBuildProjectDirectory)\..\Magick.Native\libraries\**\*" />
  </ItemGroup>

  <!-- Target에서 조건을 확인하고 복사 작업을 수행합니다. -->
  <Target Name="Copylibraries" BeforeTargets="Build"
    Condition="!Exists('$(MSBuildProjectDirectory)/libraries')">
    <Message Text="Need Magick.Native files..." Importance="high" />
    <Copy
      SourceFiles="@(NativeDir)"
      DestinationFiles="@(NativeDir->'$(MSBuildProjectDirectory)\libraries\%(RecursiveDir)%(Filename)%(Extension)')"
    />
  </Target>

  <Target Name="CopyNativeLib" AfterTargets="Build">
    <PropertyGroup>
      <QuantumName
        Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(
        $(MSBuildThisFileName), 'Q8'))">
        Q8</QuantumName>
    </PropertyGroup>
    <PropertyGroup>
      <QuantumName
        Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(
        $(MSBuildThisFileName), 'Q8-OpenMP'))">
        Q8-OpenMP</QuantumName>
    </PropertyGroup>
    <PropertyGroup>
      <QuantumName
        Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(
        $(MSBuildThisFileName), 'Q16'))">
        Q16</QuantumName>
    </PropertyGroup>
    <PropertyGroup>
      <QuantumName
        Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(
        $(MSBuildThisFileName), 'Q16-OpenMP'))">
        Q16-OpenMP</QuantumName>
    </PropertyGroup>
    <PropertyGroup>
      <QuantumName
        Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(
        $(MSBuildThisFileName), 'Q16-HDRI'))">
        Q16-HDRI</QuantumName>
    </PropertyGroup>
    <PropertyGroup>
      <QuantumName
        Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(
        $(MSBuildThisFileName), 'Q16-HDRI-OpenMP'))">
        Q16-HDRI-OpenMP</QuantumName>
    </PropertyGroup>

    <ItemGroup>
      <libraries Include="$(MSBuildProjectDirectory)\libraries\**\*" />
    </ItemGroup>
    <Message Text="Copying native libraries..." Importance="high" />
    <Copy
      SourceFiles="@(libraries)"
      DestinationFiles="@(libraries->'$(OutputPath)\magickNativeFiles\%(RecursiveDir)%(Filename)%(Extension)')"
    />
    <Message Text="AssemblyName: '$(AssemblyName)'" Importance="high" />
    <Message Text="RID: '$(RuntimeIdentifier)'" Importance="high" />
    <Message Text="Magick.Native-$(QuantumName)-$(Platform).dll" Importance="high" />
    <ItemGroup
      Condition="'$(RuntimeIdentifier)' == 'win-x64'">
      <AllFiles
        Include='$(OutputPath)\magickNativeFiles\**\*'
        Exclude="$(OutputPath)\magickNativeFiles\win\Magick.Native-$(QuantumName)-x64.dll" />
    </ItemGroup>

    <ItemGroup
      Condition="'$(RuntimeIdentifier)' ==  'linux-arm64'">
      <AllFiles
        Include='$(OutputPath)\magickNativeFiles\**\*'
        Exclude="$(OutputPath)\magickNativeFiles\linux\Magick.Native-$(QuantumName)-arm64.dll.so" />
    </ItemGroup>

    <ItemGroup
      Condition="'$(RuntimeIdentifier)' ==  'linux-x64'">
      <AllFiles
        Include='$(OutputPath)\magickNativeFiles\**\*'
        Exclude="$(OutputPath)\magickNativeFiles\linux\Magick.Native-$(QuantumName)-x64.dll.so" />
    </ItemGroup>
    <ItemGroup
      Condition="'$(RuntimeIdentifier)' ==  'linux-musl-x64'">
      <AllFiles
        Include='$(OutputPath)\magickNativeFiles\**\*'
        Exclude="$(OutputPath)\magickNativeFiles\linux-musl\Magick.Native-$(QuantumName)-x64.dll.so" />
    </ItemGroup>

    <ItemGroup
      Condition="'$(RuntimeIdentifier)' == 'osx-arm64'">
      <AllFiles
        Include='$(OutputPath)\magickNativeFiles\**\*'
        Exclude="$(OutputPath)\magickNativeFiles\osx\Magick.Native-$(QuantumName)-arm64.dll.dylib" />
    </ItemGroup>
    <ItemGroup
      Condition="'$(RuntimeIdentifier)' == 'osx-x64'">
      <AllFiles
        Include='$(OutputPath)\magickNativeFiles\**\*'
        Exclude="$(OutputPath)\magickNativeFiles\osx\Magick.Native-$(QuantumName)-x64.dll.dylib" />
    </ItemGroup>


    <!-- 특정 파일을 제외한 모든 파일 삭제 -->
    <Delete Files="@(AllFiles)" TreatErrorsAsWarnings="true" />

    <!-- 빈 폴더 삭제 -->
    <Exec Condition="'$([System.OperatingSystem]::IsWindows())' == 'true'"
      Command="powershell -Command &quot;Get-ChildItem -Path $(OutputPath)\magickNativeFiles -Recurse -Directory | Where-Object { $_.GetFileSystemInfos().Count -eq 0 } | Remove-Item&quot;" />
    <Exec
      Condition="'$([System.OperatingSystem]::IsLinux())' == 'true' or '$([System.OperatingSystem]::IsMacOS())' == 'true'"
      Command="find $(OutputPath)/magickNativeFiles -type d -empty -delete" />

  </Target>
</Project>